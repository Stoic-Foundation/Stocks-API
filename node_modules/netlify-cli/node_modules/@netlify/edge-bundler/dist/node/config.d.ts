import { DenoBridge } from './bridge.js';
import { EdgeFunction } from './edge_function.js';
import { ImportMap } from './import_map.js';
import { Logger } from './logger.js';
export declare const enum Cache {
    Off = "off",
    Manual = "manual"
}
export type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS';
export type Path = `/${string}`;
export type OnError = 'fail' | 'bypass' | Path;
export declare const isValidOnError: (value: unknown) => value is OnError;
export interface FunctionConfig {
    cache?: Cache;
    path?: Path | Path[];
    excludedPath?: Path | Path[];
    onError?: OnError;
    name?: string;
    generator?: string;
    method?: HTTPMethod | HTTPMethod[];
}
export declare const getFunctionConfig: ({ func, importMap, deno, log, }: {
    func: EdgeFunction;
    importMap: ImportMap;
    deno: DenoBridge;
    log: Logger;
}) => Promise<FunctionConfig>;
