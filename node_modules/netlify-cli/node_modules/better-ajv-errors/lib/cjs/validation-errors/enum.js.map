{
  "version": 3,
  "sources": ["../../../src/validation-errors/enum.js"],
  "sourcesContent": ["import chalk from 'chalk';\nimport leven from 'leven';\nimport pointer from 'jsonpointer';\nimport BaseValidationError from './base';\n\nexport default class EnumValidationError extends BaseValidationError {\n  print() {\n    const {\n      message,\n      params: { allowedValues },\n    } = this.options;\n    const bestMatch = this.findBestMatch();\n\n    const output = [\n      chalk`{red {bold ENUM} ${message}}`,\n      chalk`{red (${allowedValues.join(', ')})}\\n`,\n    ];\n\n    return output.concat(\n      this.getCodeFrame(\n        bestMatch !== null\n          ? chalk`\uD83D\uDC48\uD83C\uDFFD  Did you mean {magentaBright ${bestMatch}} here?`\n          : chalk`\uD83D\uDC48\uD83C\uDFFD  Unexpected value, should be equal to one of the allowed values`\n      )\n    );\n  }\n\n  getError() {\n    const { message, params } = this.options;\n    const bestMatch = this.findBestMatch();\n    const allowedValues = params.allowedValues.join(', ');\n\n    const output = {\n      ...this.getLocation(),\n      error: `${this.getDecoratedPath()} ${message}: ${allowedValues}`,\n      path: this.instancePath,\n    };\n\n    if (bestMatch !== null) {\n      output.suggestion = `Did you mean ${bestMatch}?`;\n    }\n\n    return output;\n  }\n\n  findBestMatch() {\n    const {\n      params: { allowedValues },\n    } = this.options;\n\n    const currentValue =\n      this.instancePath === ''\n        ? this.data\n        : pointer.get(this.data, this.instancePath);\n\n    if (!currentValue) {\n      return null;\n    }\n\n    const bestMatch = allowedValues\n      .map(value => ({\n        value,\n        weight: leven(value, currentValue.toString()),\n      }))\n      .sort((x, y) =>\n        x.weight > y.weight ? 1 : x.weight < y.weight ? -1 : 0\n      )[0];\n\n    return allowedValues.length === 1 ||\n      bestMatch.weight < bestMatch.value.length\n      ? bestMatch.value\n      : null;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,mBAAkB;AAClB,yBAAoB;AACpB,kBAAgC;AAEhC,MAAO,4BAA0C,oBAAoB;AAAA,EACnE,QAAQ;AACN,UAAM;AAAA,MACJ;AAAA,MACA,QAAQ,EAAE;AAAA,QACR,KAAK;AACT,UAAM,YAAY,KAAK,cAAc;AAErC,UAAM,SAAS;AAAA,MACb,wCAAyB;AAAA,MACzB,6BAAc,cAAc,KAAK,IAAI;AAAA,IACvC;AAEA,WAAO,OAAO,OACZ,KAAK,aACH,cAAc,OACV,yDAA0C,qBAC1C,0FACN,CACF;AAAA,EACF;AAAA,EAEA,WAAW;AACT,UAAM,EAAE,SAAS,WAAW,KAAK;AACjC,UAAM,YAAY,KAAK,cAAc;AACrC,UAAM,gBAAgB,OAAO,cAAc,KAAK,IAAI;AAEpD,UAAM,SAAS,iCACV,KAAK,YAAY,IADP;AAAA,MAEb,OAAO,GAAG,KAAK,iBAAiB,KAAK,YAAY;AAAA,MACjD,MAAM,KAAK;AAAA,IACb;AAEA,QAAI,cAAc,MAAM;AACtB,aAAO,aAAa,gBAAgB;AAAA,IACtC;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,gBAAgB;AACd,UAAM;AAAA,MACJ,QAAQ,EAAE;AAAA,QACR,KAAK;AAET,UAAM,eACJ,KAAK,iBAAiB,KAClB,KAAK,OACL,2BAAQ,IAAI,KAAK,MAAM,KAAK,YAAY;AAE9C,QAAI,CAAC,cAAc;AACjB,aAAO;AAAA,IACT;AAEA,UAAM,YAAY,cACf,IAAI,WAAU;AAAA,MACb;AAAA,MACA,QAAQ,0BAAM,OAAO,aAAa,SAAS,CAAC;AAAA,IAC9C,EAAE,EACD,KAAK,CAAC,GAAG,MACR,EAAE,SAAS,EAAE,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,KAAK,CACvD,EAAE;AAEJ,WAAO,cAAc,WAAW,KAC9B,UAAU,SAAS,UAAU,MAAM,SACjC,UAAU,QACV;AAAA,EACN;AACF;",
  "names": []
}
